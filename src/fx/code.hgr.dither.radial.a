;license:MIT
;(c) 2019-2022 by 4am
;
!cpu 6502
!to "build/FXCODE/HGRDITHERRADIAL",plain
*=$6200

         !source "src/fx/macros.a"

evenrow_ptr    = $E4      ; word
oddrow_ptr     = $E6      ; word
mirror_src1    = $E8      ; word
mirror_dest1   = $EA      ; word
mirror_src2    = $EC      ; word
mirror_dest2   = $EE      ; word
src1           = $F0      ; word
dest1          = $F2      ; word
src2           = $F4      ; word
dest2          = $F6      ; word
reverse_input  = $FC      ; word
input          = $FE      ; word

;HGRDitherRadialPrecomputed1Bit
         jsr   iBuildHGRDitherMasks
         jsr   iBuildHGRMirrorCols
         jsr   iBuildHGRTables
         jsr   iBuildHGRMirrorTables
         jsr   iBuildHGRSparseBitmasks1Bit

         +LDADDR evenrow_masks
         +ST16 evenrow_ptr
         +LDADDR oddrow_masks
         +ST16 oddrow_ptr
         jsr   FullRadial
         bit   KBD
         bmi   Exit
         lda   #<no_masks
         sta   <evenrow_ptr
         sta   <oddrow_ptr
         ; /!\ execution falls through here
FullRadial
         +LDADDR Coordinates1Bit
         +ST16 input
         +LDADDR EndCoordinates1Bit-2
         +ST16 reverse_input
         +HIDE_NEXT_BYTE
Exit     rts
Loop     ldy   #0
         lda   (input),y
         bmi   Exit
         tax
         +ROW_X_TO_BASE_ADDRESSES src1, src2, dest1, dest2
         +ROW_X_TO_MIRROR_ADDRESSES mirror_src1, mirror_src2, mirror_dest1, mirror_dest2
         inc   input
         lda   (input),y
         +HIGH_3_LOW_5 input

         ; top-left quadrant (original row, original column, original input order)
         +COPY_BIT_DITHER src1, dest1, copymasks1bit, evenrow_ptr
         +COPY_BIT_DITHER src2, dest2, copymasks1bit, oddrow_ptr

         ; bottom-right quadrant (opposite row, opposite column, original input order)
         lda   mirror_cols,y
         tay
         +COPY_BIT_DITHER mirror_src1, mirror_dest1, mirror_copymasks1bit, oddrow_ptr
         +COPY_BIT_DITHER mirror_src2, mirror_dest2, mirror_copymasks1bit, evenrow_ptr

         ldy   #0
         lda   (reverse_input),y
         tax
         +ROW_X_TO_BASE_ADDRESSES src1, src2, dest1, dest2
         +ROW_X_TO_MIRROR_ADDRESSES mirror_src1, mirror_src2, mirror_dest1, mirror_dest2
         iny
         lda   (reverse_input),y
         +HIGH_3_LOW_5 reverse_input

         ; bottom-left quadrant (opposite row, original column, reverse input order)
         +COPY_BIT_DITHER mirror_src1, mirror_dest1, copymasks1bit, oddrow_ptr
         +COPY_BIT_DITHER mirror_src2, mirror_dest2, copymasks1bit, evenrow_ptr

         ; top-right quadrant (same row, opposite column, reverse input order)
         lda   mirror_cols,y
         tay
         +COPY_BIT_DITHER src1, dest1, mirror_copymasks1bit, evenrow_ptr
         +COPY_BIT_DITHER src2, dest2, mirror_copymasks1bit, oddrow_ptr

         inc   input
         bne   +
         inc   input+1
+        lda   reverse_input
         php
         dec   reverse_input
         dec   reverse_input
         plp
         bne   +
         dec   reverse_input+1
         bit   $c000
         bmi   ++
+        jmp   Loop
++       rts
